# loading data
# load(file = "../Rdata/MR_OF_Full_lnRR_ML_meta_AICc_seltable.Rdata")
# MR_OF_Full_lnRRst <- sel.table
# load(file = "../Rdata/MR_OF_Full_lnCVR_ML_meta_AICc_seltable.Rdata")
# MR_OF_Full_lnCVRst <- sel.table
# load(file = "../Rdata/MR_MG_Full_lnRR_ML_meta_AICc_seltable.Rdata")
# MR_MG_Full_lnRRst <- sel.table
# load(file = "../Rdata/MR_MG_Full_lnCVR_ML_meta_AICc_seltable.Rdata")
# MR_MG_Full_lnCVRst <- sel.table
# loading table template
t10 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 7)
# saving row position
pos <- c(2:9, 11:18, 20:27, 29:36)
t10$`Model`[pos] <- c(MR_OF_Full_lnRRst$Model, MR_OF_Full_lnCVRst$Model, MR_MG_Full_lnRRst$Model, MR_MG_Full_lnCVRst$Model)
#list.files("./Rdata/")
#loading data
load(file = "../Rdata/MR_OF_Full_lnRR_ML_meta_AICc_seltable.Rdata")
MR_OF_Full_lnRRst <- sel.table
load(file = "../Rdata/MR_OF_Full_lnCVR_ML_meta_AICc_seltable.Rdata")
MR_OF_Full_lnCVRst <- sel.table
load(file = "../Rdata/MR_MG_Full_lnRR_ML_meta_AICc_seltable.Rdata")
MR_MG_Full_lnRRst <- sel.table
load(file = "../Rdata/MR_MG_Full_lnCVR_ML_meta_AICc_seltable.Rdata")
MR_MG_Full_lnCVRst <- sel.table
# loading table template
t10 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 7)
# saving row position
pos <- c(2:9, 11:18, 20:27, 29:36)
t10$`Model`[pos] <- c(MR_OF_Full_lnRRst$Model, MR_OF_Full_lnCVRst$Model, MR_MG_Full_lnRRst$Model, MR_MG_Full_lnCVRst$Model)
t10$`K`[pos] <- c(MR_OF_Full_lnRRst$K, MR_OF_Full_lnCVRst$K, MR_MG_Full_lnRRst$K, MR_MG_Full_lnCVRst$K)
t10$`logLik`[pos] <- round(c(MR_OF_Full_lnRRst$logLik, MR_OF_Full_lnCVRst$logLik, MR_MG_Full_lnRRst$logLik, MR_MG_Full_lnCVRst$logLik),2)
t10$`AICc`[pos] <- round(c(MR_OF_Full_lnRRst$AICc, MR_OF_Full_lnCVRst$AICc, MR_MG_Full_lnRRst$AICc, MR_MG_Full_lnCVRst$AICc),2)
t10$`delta`[pos] <- round(c(MR_OF_Full_lnRRst$delta, MR_OF_Full_lnCVRst$delta, MR_MG_Full_lnRRst$delta, MR_MG_Full_lnCVRst$delta),2)
t10$`weight`[pos] <- round(c(MR_OF_Full_lnRRst$weight, MR_OF_Full_lnCVRst$weight, MR_MG_Full_lnRRst$weight, MR_MG_Full_lnCVRst$weight),2)
write.csv(t10, file = "../Tables/Table_S10_modelselection.csv", row.names = F, na = "")
# load(file = "./Rdata/PB_OF_MG_Full.Rdata") #contains: PB_OF_Full_lnRR, PB_OF_Full_lnCVR, PB_MG_Full_lnRR, PB_MG_Full_lnCVR
# loading empty table
t11 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 8)
# saving row positions for estimates
pos <- c(2:14, 16:28, 30:41, 43:54)
t11$`Mean`[pos] <- round(c(
PB_OF_Full_lnRR$b,
PB_OF_Full_lnCVR$b,
PB_MG_Full_lnRR$b,
PB_MG_Full_lnCVR$b), 3)
t11$CI.lb[pos] <- round(c(
PB_OF_Full_lnRR$ci.lb,
PB_OF_Full_lnCVR$ci.lb,
PB_MG_Full_lnRR$ci.lb,
PB_MG_Full_lnCVR$ci.lb), 3)
t11$CI.ub[pos] <- round(c(
PB_OF_Full_lnRR$ci.ub,
PB_OF_Full_lnCVR$ci.ub,
PB_MG_Full_lnRR$ci.ub,
PB_MG_Full_lnCVR$ci.ub), 3)
t11$p[pos] <- round(c(
PB_OF_Full_lnRR$pval,
PB_OF_Full_lnCVR$pval,
PB_MG_Full_lnRR$pval,
PB_MG_Full_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 15, 29, 42) #row positions
t11$`R2`[posR2] <- round(c(R2(PB_OF_Full_lnRR)[1], R2(PB_OF_Full_lnCVR)[1], R2(PB_MG_Full_lnRR)[1], R2(PB_MG_Full_lnCVR)[1]),3)
write.csv(t11, file = "../Tables/Table_S11.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_Year_lnRR.Rdata")
load(file = "../Rdata/MR_OF_Year_lnCVR.Rdata")
load(file = "../Rdata/MR_MG_Year_lnRR.Rdata")
load(file = "../Rdata/MR_MG_Year_lnCVR.Rdata")
# loading empty table
t12 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 9)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9, 11:12)
t12$`Mean`[pos] <- round(c(
MR_OF_Year_lnRR$b,
MR_OF_Year_lnCVR$b,
MR_MG_Year_lnRR$b,
MR_MG_Year_lnCVR$b), 3)
t12$CI.lb[pos] <- round(c(
MR_OF_Year_lnRR$ci.lb,
MR_OF_Year_lnCVR$ci.lb,
MR_MG_Year_lnRR$ci.lb,
MR_MG_Year_lnCVR$ci.lb), 3)
t12$CI.ub[pos] <- round(c(
MR_OF_Year_lnRR$ci.ub,
MR_OF_Year_lnCVR$ci.ub,
MR_MG_Year_lnRR$ci.ub,
MR_MG_Year_lnCVR$ci.ub), 3)
t12$p[pos] <- round(c(
MR_OF_Year_lnRR$pval,
MR_OF_Year_lnCVR$pval,
MR_MG_Year_lnRR$pval,
MR_MG_Year_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7, 10) #row positions
t12$`R2`[posR2] <- round(c(R2(MR_OF_Year_lnRR)[1], R2(MR_OF_Year_lnCVR)[1], R2(MR_MG_Year_lnRR)[1], R2(MR_MG_Year_lnCVR)[1]),3)
write.csv(t12, file = "../Tables/Table_S12.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_DietE_lnRR.Rdata")
load(file = "../Rdata/MR_OF_DietE_lnCVR.Rdata")
load(file = "../Rdata/MR_MG_DietE_lnRR.Rdata")
load(file = "../Rdata/MR_MG_DietE_lnCVR.Rdata")
# loading empty table
t13 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 10)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9, 11:12)
t13$`Mean`[pos] <- round(c(
MR_OF_DietE_lnRR$b,
MR_OF_DietE_lnCVR$b,
MR_MG_DietE_lnRR$b,
MR_MG_DietE_lnCVR$b), 3)
t13$CI.lb[pos] <- round(c(
MR_OF_DietE_lnRR$ci.lb,
MR_OF_DietE_lnCVR$ci.lb,
MR_MG_DietE_lnRR$ci.lb,
MR_MG_DietE_lnCVR$ci.lb), 3)
t13$CI.ub[pos] <- round(c(
MR_OF_DietE_lnRR$ci.ub,
MR_OF_DietE_lnCVR$ci.ub,
MR_MG_DietE_lnRR$ci.ub,
MR_MG_DietE_lnCVR$ci.ub), 3)
t13$p[pos] <- round(c(
MR_OF_DietE_lnRR$pval,
MR_OF_DietE_lnCVR$pval,
MR_MG_DietE_lnRR$pval,
MR_MG_DietE_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7, 10) #row positions
t13$`R2`[posR2] <- round(c(R2(MR_OF_DietE_lnRR)[1], R2(MR_OF_DietE_lnCVR)[1], R2(MR_MG_DietE_lnRR)[1], R2(MR_MG_DietE_lnCVR)[1]),3)
write.csv(t13, file = "../Tables/Table_S13.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_DietPNP_lnRR.Rdata")
load(file = "../Rdata/MR_OF_DietPNP_lnCVR.Rdata")
load(file = "../Rdata/MR_MG_DietPNP_lnRR.Rdata")
load(file = "../Rdata/MR_MG_DietPNP_lnCVR.Rdata")
# loading empty table
t14 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 11)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9, 11:12)
t14$`Mean`[pos] <- round(c(
MR_OF_DietPNP_lnRR$b,
MR_OF_DietPNP_lnCVR$b,
MR_MG_DietPNP_lnRR$b,
MR_MG_DietPNP_lnCVR$b), 3)
t14$CI.lb[pos] <- round(c(
MR_OF_DietPNP_lnRR$ci.lb,
MR_OF_DietPNP_lnCVR$ci.lb,
MR_MG_DietPNP_lnRR$ci.lb,
MR_MG_DietPNP_lnCVR$ci.lb), 3)
t14$CI.ub[pos] <- round(c(
MR_OF_DietPNP_lnRR$ci.ub,
MR_OF_DietPNP_lnCVR$ci.ub,
MR_MG_DietPNP_lnRR$ci.ub,
MR_MG_DietPNP_lnCVR$ci.ub), 3)
t14$p[pos] <- round(c(
MR_OF_DietPNP_lnRR$pval,
MR_OF_DietPNP_lnCVR$pval,
MR_MG_DietPNP_lnRR$pval,
MR_MG_DietPNP_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7, 10) #row positions
t14$`R2`[posR2] <- round(c(R2(MR_OF_DietPNP_lnRR)[1], R2(MR_OF_DietPNP_lnCVR)[1], R2(MR_MG_DietPNP_lnRR)[1], R2(MR_MG_DietPNP_lnCVR)[1]),3)
write.csv(t14, file = "../Tables/Table_S14.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_TDur_lnRR.Rdata")
load(file = "../Rdata/MR_OF_TDur_lnCVR.Rdata")
load(file = "../Rdata/MR_MG_TDur_lnRR.Rdata")
load(file = "../Rdata/MR_MG_TDur_lnCVR.Rdata")
# loading empty table
t15 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 12)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9, 11:12)
t15$`Mean`[pos] <- round(c(
MR_OF_TDur_lnRR$b,
MR_OF_TDur_lnCVR$b,
MR_MG_TDur_lnRR$b,
MR_MG_TDur_lnCVR$b), 3)
t15$CI.lb[pos] <- round(c(
MR_OF_TDur_lnRR$ci.lb,
MR_OF_TDur_lnCVR$ci.lb,
MR_MG_TDur_lnRR$ci.lb,
MR_MG_TDur_lnCVR$ci.lb), 3)
t15$CI.ub[pos] <- round(c(
MR_OF_TDur_lnRR$ci.ub,
MR_OF_TDur_lnCVR$ci.ub,
MR_MG_TDur_lnRR$ci.ub,
MR_MG_TDur_lnCVR$ci.ub), 3)
t15$p[pos] <- round(c(
MR_OF_TDur_lnRR$pval,
MR_OF_TDur_lnCVR$pval,
MR_MG_TDur_lnRR$pval,
MR_MG_TDur_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7, 10) #row positions
t15$`R2`[posR2] <- round(c(R2(MR_OF_TDur_lnRR)[1], R2(MR_OF_TDur_lnCVR)[1], R2(MR_MG_TDur_lnRR)[1], R2(MR_MG_TDur_lnCVR)[1]),3)
write.csv(t15, file = "../Tables/Table_S15.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_OffGen_lnRR.Rdata")
load(file = "../Rdata/MR_OF_OffGen_lnRRi.Rdata")
load(file = "../Rdata/MR_OF_OffGen_lnCVR.Rdata")
load(file = "../Rdata/MR_OF_OffGen_lnCVRi.Rdata")
load(file = "../Rdata/MR_MG_OffGen_lnRR.Rdata")
load(file = "../Rdata/MR_MG_OffGen_lnRRi.Rdata")
load(file = "../Rdata/MR_MG_OffGen_lnRR.Rdata")
load(file = "../Rdata/MR_MG_OffGen_lnCVRi.Rdata")
# loading empty table
t16 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 13)
# saving row positions for estimates
pos <- c(2:4, 6:8, 10:12, 14:16)
t16$`Mean`[pos] <- round(c(
MR_OF_OffGen_lnRRi$b,
MR_OF_OffGen_lnRR$b[2],
MR_OF_OffGen_lnCVRi$b,
MR_OF_OffGen_lnCVR$b[2],
MR_MG_OffGen_lnRRi$b,
MR_MG_OffGen_lnRR$b[2],
MR_MG_OffGen_lnCVRi$b,
MR_MG_OffGen_lnCVR$b[2]), 3)
t16$CI.lb[pos] <- round(c(
MR_OF_OffGen_lnRRi$ci.lb,
MR_OF_OffGen_lnRR$ci.lb[2],
MR_OF_OffGen_lnCVRi$ci.lb,
MR_OF_OffGen_lnCVR$ci.lb[2],
MR_MG_OffGen_lnRRi$ci.lb,
MR_MG_OffGen_lnRR$ci.lb[2],
MR_MG_OffGen_lnCVRi$ci.lb,
MR_MG_OffGen_lnCVR$ci.lb[2]), 3)
t16$CI.ub[pos] <- round(c(
MR_OF_OffGen_lnRRi$ci.ub,
MR_OF_OffGen_lnRR$ci.ub[2],
MR_OF_OffGen_lnCVRi$ci.ub,
MR_OF_OffGen_lnCVR$ci.ub[2],
MR_MG_OffGen_lnRRi$ci.ub,
MR_MG_OffGen_lnRR$ci.ub[2],
MR_MG_OffGen_lnCVRi$ci.ub,
MR_MG_OffGen_lnCVR$ci.ub[2]), 3)
t16$k[pos] <- c(
rev(table(data_all$Offspring_Generation)),
rep(NA, 1),
rev(table(data_all$Offspring_Generation)),
rep(NA, 1),
rev(table(data_all$Offspring_Generation)),
rep(NA, 1),
rev(table(data_all$Offspring_Generation)),
rep(NA, 1)
)
# adding model R2 estimates to the table
posR2 <- c(1, 5, 9, 13) #row positions
t16$`R2`[posR2] <- round(c(R2(MR_OF_OffGen_lnRR)[1], R2(MR_OF_OffGen_lnCVR)[1], R2(MR_MG_OffGen_lnRR)[1], R2(MR_MG_OffGen_lnCVR)[1]),3)
write.csv(t16, file = "../Tables/Table_S16.csv", row.names = F, na = "")
load(file = "../Rdata/MR_F0_age.Rdata")
load(file = "../Rdata/MR_OF_age.Rdata")
load(file = "../Rdata/MR_MG_age.Rdata")
# loading empty table
t17 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 14)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9)
t17$`Mean`[pos] <- round(c(
MR_F0_age$b[1:2],
MR_OF_age$b[1:2],
MR_MG_age$b[1:2]), 3)
t17$CI.lb[pos] <- round(c(
MR_F0_age$ci.lb,
MR_OF_age$ci.lb,
MR_MG_age$ci.lb), 3)
t17$CI.ub[pos] <- round(c(
MR_F0_age$ci.ub,
MR_OF_age$ci.ub,
MR_MG_age$ci.ub), 3)
t17$p[pos] <- round(c(
MR_F0_age$pval,
MR_OF_age$pval,
MR_MG_age$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7) #row positions
t17$`R2`[posR2] <- round(c(R2(MR_F0_age)[1], R2(MR_OF_age)[1], R2(MR_MG_age)[1]),3)
write.csv(t17, file = "../Tables/Table_S17.csv", row.names = F, na = "")
load(file = "../Rdata/prediction_F0.Rdata")
load(file = "../Rdata/prediction_OF.Rdata")
load(file = "../Rdata/prediction_MG.Rdata")
# loading empty table
t18 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 15)
# saving row positions for estimates
pos <- c(1:3)
t18$`Mean`[pos] <- round(c(
prediction_F0$pred,
prediction_OF$pred,
prediction_MG$pred), 3)
t18$SE[pos] <- round(c(
prediction_F0$se,
prediction_OF$se,
prediction_MG$se), 3)
t18$CI.lb[pos] <- round(c(
prediction_F0$ci.lb,
prediction_OF$ci.lb,
prediction_MG$ci.lb), 3)
t18$CI.ub[pos] <- round(c(
prediction_F0$ci.ub,
prediction_OF$ci.ub,
prediction_MG$ci.ub), 3)
t18$PI.lb[pos] <- round(c(
prediction_F0$cr.lb,
prediction_OF$cr.lb,
prediction_MG$cr.lb), 3)
t18$PI.ub[pos] <- round(c(
prediction_F0$cr.ub,
prediction_OF$cr.ub,
prediction_MG$cr.ub), 3)
write.csv(t18, file = "../Tables/Table_S18.csv", row.names = F, na = "")
knitr::include_graphics("../Plots/SI_PRISMA_v2.pdf")
knitr::include_graphics("../Plots/SI_Figure_DecisionTree_abstracts_v0.pdf")
knitr::include_graphics("../Plots/SI_Figure_DecisionTree_fulltexts_v0.pdf")
save.image(file='myEnvironment.RData')
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle # for AICtab
)
#Load environment
load('myEnvironment.RData')
getwd
getwd()
load('myEnvironment.RData')
# Load preprocessed data with effect sizes
data_all <- read.csv(file ="../Data/data_all_ES.csv")
# Load preprocessed data with effect sizes
data_all <- read.csv(file ="./Data/data_all_ES.csv")
# Load preprocessed data with effect sizes
data_all <- read.csv(file ="../Data/data_all_ES.csv")
# Subset by One off and Multigenerational
data_MG <- filter(data_all, Exposure_Type == "Multigenerational")
data_OF <- filter(data_all, Exposure_Type == "One-off")
dim(data_MG)
dim(data_OF)
data_MG <- droplevels(data_MG) #adjust factor levels
data_OF <- droplevels(data_OF) #a
## all data
Vmat_lnRR_all <- make_VCV_matrix(data = data_all, V = "VlnRR", cluster = "Cohort_ID_Control", obs = "ES_ID")
Vmat_lnCVR_all <- make_VCV_matrix(data = data_all, V = "VlnCVR", cluster = "Cohort_ID_Control", obs = "ES_ID")
## OF data
Vmat_lnRR_OF <- make_VCV_matrix(data = data_OF, V = "VlnRR", cluster = "Cohort_ID_Control", obs = "ES_ID")
Vmat_lnCVR_OF <- make_VCV_matrix(data = data_OF, V = "VlnCVR", cluster = "Cohort_ID_Control", obs = "ES_ID")
## MG data
Vmat_lnRR_MG <- make_VCV_matrix(data = data_MG, V = "VlnRR", cluster = "Cohort_ID_Control", obs = "ES_ID")
Vmat_lnCVR_MG <- make_VCV_matrix(data = data_MG, V = "VlnCVR", cluster = "Cohort_ID_Control", obs = "ES_ID")
#Vmat_lnRR_all #visual check
## OF dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_OF, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_OF, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_OF, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
## MG dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_MG, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_MG, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_MG, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')#with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat and MA_10_Vmat and MA_4_Vmat best, but MA_5_Vmat and MA_6_Vmat and MA_8_Vmat very similar
rm(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat)
#use: random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID) #MA_9_Vmat
ls()
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
MA_9_Vmat
MA_4_Vmat
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
## OF dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_OF, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_OF, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_OF, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
## MG dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_MG, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_MG, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_MG, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')#with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat and MA_10_Vmat and MA_4_Vmat best, but MA_5_Vmat and MA_6_Vmat and MA_8_Vmat very similar
rm(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat)
#use: random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID) #MA_9_Vmat
names(data_OF)
MA_OF_lnRR <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MA_OF_lnRR)
I2(MA_OF_lnRR, method = "S")
summary(MA_OF_lnCVR)
I2(MA_OF_lnCVR, method = "S")
summary(MA_MG_lnRR)
I2(MA_MG_lnRR, method = "S")
summary(MA_MG_lnCVR)
I2(MA_MG_lnCVR, method = "S")
names(data_all)
## lnRR
MR_all_RodT_lnRR <- rma.mv(lnRR, Vmat_lnRR_all, mods= ~Rodent_Type, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnRR)
save(MR_all_RodT_lnRR, file = "../Rdata/MR_all_RodT_lnRR.Rdata")
## lnRR
MR_all_RodT_lnRR <- rma.mv(lnRR, Vmat_lnRR_all, mods= ~Rodent_Type, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnRR)
save(MR_all_RodT_lnRR, file = "./Rdata/MR_all_RodT_lnRR.Rdata")
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle, # for AICtab
here, # help loading and saving
)
#Load environment
load('myEnvironment.RData')
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle, # for AICtab
here, # help loading and saving
)
load(here('myEnvironment.RData'))
# Load preprocessed data with effect sizes
data_all <- read.csv(file =here("Data", "data_all_ES.csv"))
## OF data - lnRR random-effect model with VCV
MA_OF_lnRR <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MA_OF_lnRR)
I2(MA_OF_lnRR, method = "S")
save(MA_OF_lnRR, file = here("Rdata/MA_OF_lnRR.Rdata"))
## OF data - lnRR random-effect model with VCV
MA_OF_lnRR <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MA_OF_lnRR)
I2(MA_OF_lnRR, method = "S")
save(MA_OF_lnRR, file = here("Rdata/MA_OF_lnRR.Rdata"))
## OF data - lnCVR random-effect model with VCV
MA_OF_lnCVR <- rma.mv(lnCVR, Vmat_lnCVR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MA_OF_lnCVR)
I2(MA_OF_lnCVR, method = "S")
save(MA_OF_lnCVR, file = here("Rdata/MA_OF_lnCVR.Rdata"))
## MG data - lnRR random-effect model with VCV
MA_MG_lnRR <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = "REML")
summary(MA_MG_lnRR)
I2(MA_MG_lnRR, method = "S")
save(MA_MG_lnRR, file = here("Rdata/MA_MG_lnRR.Rdata"))
## MG data - lnCvR random-effect model with VCV
MA_MG_lnCVR <- rma.mv(lnCVR, Vmat_lnCVR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = "REML")
summary(MA_MG_lnCVR)
I2(MA_MG_lnCVR, method = "S")
save(MA_MG_lnCVR, file = here("Rdata/MA_MG_lnCVR.Rdata"))
## lnRR
MR_all_RodT_lnRR <- rma.mv(lnRR, Vmat_lnRR_all, mods= ~Rodent_Type, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnRR)
save(MR_all_RodT_lnRR, file = "./Rdata/MR_all_RodT_lnRR.Rdata")
## lnRR - intercepts
MR_all_RodT_lnRRi <- rma.mv(lnRR, Vmat_lnRR_all, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnRRi)
save(MR_all_RodT_lnRRi, file = "./Rdata/MR_all_RodT_lnRRi.Rdata")
R2(MR_all_ExpT_lnRR)
## lnCVR
MR_all_RodT_lnCVR <- rma.mv(lnCVR, Vmat_lnCVR_all, mods= ~Rodent_Type, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnCVR)
save(MR_all_RodT_lnCVR, file = "./Rdata/MR_all_RodT_lnCVR.Rdata")
## lnCVR - intercepts
MR_all_RodT_lnCVRi <- rma.mv(lnCVR, Vmat_lnCVR_all, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnCVRi)
save(MR_all_RodT_lnCVRi, file = "./Rdata/MR_all_RodT_lnCVRi.Rdata")
R2(MR_all_RodT_lnCVR)
#funnel(MR_all_ExpT_lnRR, yaxis="seinv")
#funnel(MR_all_ExpT_lnCVR, yaxis="seinv")
#data_all %>% group_by(Exposure_Type) %>% count()
