<<<<<<< HEAD
# loading data
# load(file = "../Rdata/MR_OF_Full_lnRR_ML_meta_AICc_seltable.Rdata")
# MR_OF_Full_lnRRst <- sel.table
# load(file = "../Rdata/MR_OF_Full_lnCVR_ML_meta_AICc_seltable.Rdata")
# MR_OF_Full_lnCVRst <- sel.table
# load(file = "../Rdata/MR_MG_Full_lnRR_ML_meta_AICc_seltable.Rdata")
# MR_MG_Full_lnRRst <- sel.table
# load(file = "../Rdata/MR_MG_Full_lnCVR_ML_meta_AICc_seltable.Rdata")
# MR_MG_Full_lnCVRst <- sel.table
# loading table template
t10 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 7)
# saving row position
pos <- c(2:9, 11:18, 20:27, 29:36)
t10$`Model`[pos] <- c(MR_OF_Full_lnRRst$Model, MR_OF_Full_lnCVRst$Model, MR_MG_Full_lnRRst$Model, MR_MG_Full_lnCVRst$Model)
#list.files("./Rdata/")
#loading data
load(file = "../Rdata/MR_OF_Full_lnRR_ML_meta_AICc_seltable.Rdata")
MR_OF_Full_lnRRst <- sel.table
load(file = "../Rdata/MR_OF_Full_lnCVR_ML_meta_AICc_seltable.Rdata")
MR_OF_Full_lnCVRst <- sel.table
load(file = "../Rdata/MR_MG_Full_lnRR_ML_meta_AICc_seltable.Rdata")
MR_MG_Full_lnRRst <- sel.table
load(file = "../Rdata/MR_MG_Full_lnCVR_ML_meta_AICc_seltable.Rdata")
MR_MG_Full_lnCVRst <- sel.table
# loading table template
t10 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 7)
# saving row position
pos <- c(2:9, 11:18, 20:27, 29:36)
t10$`Model`[pos] <- c(MR_OF_Full_lnRRst$Model, MR_OF_Full_lnCVRst$Model, MR_MG_Full_lnRRst$Model, MR_MG_Full_lnCVRst$Model)
t10$`K`[pos] <- c(MR_OF_Full_lnRRst$K, MR_OF_Full_lnCVRst$K, MR_MG_Full_lnRRst$K, MR_MG_Full_lnCVRst$K)
t10$`logLik`[pos] <- round(c(MR_OF_Full_lnRRst$logLik, MR_OF_Full_lnCVRst$logLik, MR_MG_Full_lnRRst$logLik, MR_MG_Full_lnCVRst$logLik),2)
t10$`AICc`[pos] <- round(c(MR_OF_Full_lnRRst$AICc, MR_OF_Full_lnCVRst$AICc, MR_MG_Full_lnRRst$AICc, MR_MG_Full_lnCVRst$AICc),2)
t10$`delta`[pos] <- round(c(MR_OF_Full_lnRRst$delta, MR_OF_Full_lnCVRst$delta, MR_MG_Full_lnRRst$delta, MR_MG_Full_lnCVRst$delta),2)
t10$`weight`[pos] <- round(c(MR_OF_Full_lnRRst$weight, MR_OF_Full_lnCVRst$weight, MR_MG_Full_lnRRst$weight, MR_MG_Full_lnCVRst$weight),2)
write.csv(t10, file = "../Tables/Table_S10_modelselection.csv", row.names = F, na = "")
# load(file = "./Rdata/PB_OF_MG_Full.Rdata") #contains: PB_OF_Full_lnRR, PB_OF_Full_lnCVR, PB_MG_Full_lnRR, PB_MG_Full_lnCVR
# loading empty table
t11 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 8)
# saving row positions for estimates
pos <- c(2:14, 16:28, 30:41, 43:54)
t11$`Mean`[pos] <- round(c(
PB_OF_Full_lnRR$b,
PB_OF_Full_lnCVR$b,
PB_MG_Full_lnRR$b,
PB_MG_Full_lnCVR$b), 3)
t11$CI.lb[pos] <- round(c(
PB_OF_Full_lnRR$ci.lb,
PB_OF_Full_lnCVR$ci.lb,
PB_MG_Full_lnRR$ci.lb,
PB_MG_Full_lnCVR$ci.lb), 3)
t11$CI.ub[pos] <- round(c(
PB_OF_Full_lnRR$ci.ub,
PB_OF_Full_lnCVR$ci.ub,
PB_MG_Full_lnRR$ci.ub,
PB_MG_Full_lnCVR$ci.ub), 3)
t11$p[pos] <- round(c(
PB_OF_Full_lnRR$pval,
PB_OF_Full_lnCVR$pval,
PB_MG_Full_lnRR$pval,
PB_MG_Full_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 15, 29, 42) #row positions
t11$`R2`[posR2] <- round(c(R2(PB_OF_Full_lnRR)[1], R2(PB_OF_Full_lnCVR)[1], R2(PB_MG_Full_lnRR)[1], R2(PB_MG_Full_lnCVR)[1]),3)
write.csv(t11, file = "../Tables/Table_S11.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_Year_lnRR.Rdata")
load(file = "../Rdata/MR_OF_Year_lnCVR.Rdata")
load(file = "../Rdata/MR_MG_Year_lnRR.Rdata")
load(file = "../Rdata/MR_MG_Year_lnCVR.Rdata")
# loading empty table
t12 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 9)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9, 11:12)
t12$`Mean`[pos] <- round(c(
MR_OF_Year_lnRR$b,
MR_OF_Year_lnCVR$b,
MR_MG_Year_lnRR$b,
MR_MG_Year_lnCVR$b), 3)
t12$CI.lb[pos] <- round(c(
MR_OF_Year_lnRR$ci.lb,
MR_OF_Year_lnCVR$ci.lb,
MR_MG_Year_lnRR$ci.lb,
MR_MG_Year_lnCVR$ci.lb), 3)
t12$CI.ub[pos] <- round(c(
MR_OF_Year_lnRR$ci.ub,
MR_OF_Year_lnCVR$ci.ub,
MR_MG_Year_lnRR$ci.ub,
MR_MG_Year_lnCVR$ci.ub), 3)
t12$p[pos] <- round(c(
MR_OF_Year_lnRR$pval,
MR_OF_Year_lnCVR$pval,
MR_MG_Year_lnRR$pval,
MR_MG_Year_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7, 10) #row positions
t12$`R2`[posR2] <- round(c(R2(MR_OF_Year_lnRR)[1], R2(MR_OF_Year_lnCVR)[1], R2(MR_MG_Year_lnRR)[1], R2(MR_MG_Year_lnCVR)[1]),3)
write.csv(t12, file = "../Tables/Table_S12.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_DietE_lnRR.Rdata")
load(file = "../Rdata/MR_OF_DietE_lnCVR.Rdata")
load(file = "../Rdata/MR_MG_DietE_lnRR.Rdata")
load(file = "../Rdata/MR_MG_DietE_lnCVR.Rdata")
# loading empty table
t13 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 10)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9, 11:12)
t13$`Mean`[pos] <- round(c(
MR_OF_DietE_lnRR$b,
MR_OF_DietE_lnCVR$b,
MR_MG_DietE_lnRR$b,
MR_MG_DietE_lnCVR$b), 3)
t13$CI.lb[pos] <- round(c(
MR_OF_DietE_lnRR$ci.lb,
MR_OF_DietE_lnCVR$ci.lb,
MR_MG_DietE_lnRR$ci.lb,
MR_MG_DietE_lnCVR$ci.lb), 3)
t13$CI.ub[pos] <- round(c(
MR_OF_DietE_lnRR$ci.ub,
MR_OF_DietE_lnCVR$ci.ub,
MR_MG_DietE_lnRR$ci.ub,
MR_MG_DietE_lnCVR$ci.ub), 3)
t13$p[pos] <- round(c(
MR_OF_DietE_lnRR$pval,
MR_OF_DietE_lnCVR$pval,
MR_MG_DietE_lnRR$pval,
MR_MG_DietE_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7, 10) #row positions
t13$`R2`[posR2] <- round(c(R2(MR_OF_DietE_lnRR)[1], R2(MR_OF_DietE_lnCVR)[1], R2(MR_MG_DietE_lnRR)[1], R2(MR_MG_DietE_lnCVR)[1]),3)
write.csv(t13, file = "../Tables/Table_S13.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_DietPNP_lnRR.Rdata")
load(file = "../Rdata/MR_OF_DietPNP_lnCVR.Rdata")
load(file = "../Rdata/MR_MG_DietPNP_lnRR.Rdata")
load(file = "../Rdata/MR_MG_DietPNP_lnCVR.Rdata")
# loading empty table
t14 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 11)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9, 11:12)
t14$`Mean`[pos] <- round(c(
MR_OF_DietPNP_lnRR$b,
MR_OF_DietPNP_lnCVR$b,
MR_MG_DietPNP_lnRR$b,
MR_MG_DietPNP_lnCVR$b), 3)
t14$CI.lb[pos] <- round(c(
MR_OF_DietPNP_lnRR$ci.lb,
MR_OF_DietPNP_lnCVR$ci.lb,
MR_MG_DietPNP_lnRR$ci.lb,
MR_MG_DietPNP_lnCVR$ci.lb), 3)
t14$CI.ub[pos] <- round(c(
MR_OF_DietPNP_lnRR$ci.ub,
MR_OF_DietPNP_lnCVR$ci.ub,
MR_MG_DietPNP_lnRR$ci.ub,
MR_MG_DietPNP_lnCVR$ci.ub), 3)
t14$p[pos] <- round(c(
MR_OF_DietPNP_lnRR$pval,
MR_OF_DietPNP_lnCVR$pval,
MR_MG_DietPNP_lnRR$pval,
MR_MG_DietPNP_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7, 10) #row positions
t14$`R2`[posR2] <- round(c(R2(MR_OF_DietPNP_lnRR)[1], R2(MR_OF_DietPNP_lnCVR)[1], R2(MR_MG_DietPNP_lnRR)[1], R2(MR_MG_DietPNP_lnCVR)[1]),3)
write.csv(t14, file = "../Tables/Table_S14.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_TDur_lnRR.Rdata")
load(file = "../Rdata/MR_OF_TDur_lnCVR.Rdata")
load(file = "../Rdata/MR_MG_TDur_lnRR.Rdata")
load(file = "../Rdata/MR_MG_TDur_lnCVR.Rdata")
# loading empty table
t15 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 12)
# saving row positions for estimates
pos <- c(2:3, 5:6, 8:9, 11:12)
t15$`Mean`[pos] <- round(c(
MR_OF_TDur_lnRR$b,
MR_OF_TDur_lnCVR$b,
MR_MG_TDur_lnRR$b,
MR_MG_TDur_lnCVR$b), 3)
t15$CI.lb[pos] <- round(c(
MR_OF_TDur_lnRR$ci.lb,
MR_OF_TDur_lnCVR$ci.lb,
MR_MG_TDur_lnRR$ci.lb,
MR_MG_TDur_lnCVR$ci.lb), 3)
t15$CI.ub[pos] <- round(c(
MR_OF_TDur_lnRR$ci.ub,
MR_OF_TDur_lnCVR$ci.ub,
MR_MG_TDur_lnRR$ci.ub,
MR_MG_TDur_lnCVR$ci.ub), 3)
t15$p[pos] <- round(c(
MR_OF_TDur_lnRR$pval,
MR_OF_TDur_lnCVR$pval,
MR_MG_TDur_lnRR$pval,
MR_MG_TDur_lnCVR$pval), 3)
# adding model R2 estimates to the table
posR2 <- c(1, 4, 7, 10) #row positions
t15$`R2`[posR2] <- round(c(R2(MR_OF_TDur_lnRR)[1], R2(MR_OF_TDur_lnCVR)[1], R2(MR_MG_TDur_lnRR)[1], R2(MR_MG_TDur_lnCVR)[1]),3)
write.csv(t15, file = "../Tables/Table_S15.csv", row.names = F, na = "")
load(file = "../Rdata/MR_OF_OffGen_lnRR.Rdata")
load(file = "../Rdata/MR_OF_OffGen_lnRRi.Rdata")
load(file = "../Rdata/MR_OF_OffGen_lnCVR.Rdata")
load(file = "../Rdata/MR_OF_OffGen_lnCVRi.Rdata")
load(file = "../Rdata/MR_MG_OffGen_lnRR.Rdata")
load(file = "../Rdata/MR_MG_OffGen_lnRRi.Rdata")
load(file = "../Rdata/MR_MG_OffGen_lnRR.Rdata")
load(file = "../Rdata/MR_MG_OffGen_lnCVRi.Rdata")
# loading empty table
t16 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 13)
# saving row positions for estimates
pos <- c(2:4, 6:8, 10:12, 14:16)
t16$`Mean`[pos] <- round(c(
MR_OF_OffGen_lnRRi$b,
MR_OF_OffGen_lnRR$b[2],
MR_OF_OffGen_lnCVRi$b,
MR_OF_OffGen_lnCVR$b[2],
MR_MG_OffGen_lnRRi$b,
MR_MG_OffGen_lnRR$b[2],
MR_MG_OffGen_lnCVRi$b,
MR_MG_OffGen_lnCVR$b[2]), 3)
t16$CI.lb[pos] <- round(c(
MR_OF_OffGen_lnRRi$ci.lb,
MR_OF_OffGen_lnRR$ci.lb[2],
MR_OF_OffGen_lnCVRi$ci.lb,
MR_OF_OffGen_lnCVR$ci.lb[2],
MR_MG_OffGen_lnRRi$ci.lb,
MR_MG_OffGen_lnRR$ci.lb[2],
MR_MG_OffGen_lnCVRi$ci.lb,
MR_MG_OffGen_lnCVR$ci.lb[2]), 3)
t16$CI.ub[pos] <- round(c(
MR_OF_OffGen_lnRRi$ci.ub,
MR_OF_OffGen_lnRR$ci.ub[2],
MR_OF_OffGen_lnCVRi$ci.ub,
MR_OF_OffGen_lnCVR$ci.ub[2],
MR_MG_OffGen_lnRRi$ci.ub,
MR_MG_OffGen_lnRR$ci.ub[2],
MR_MG_OffGen_lnCVRi$ci.ub,
MR_MG_OffGen_lnCVR$ci.ub[2]), 3)
t16$k[pos] <- c(
rev(table(data_all$Offspring_Generation)),
rep(NA, 1),
rev(table(data_all$Offspring_Generation)),
rep(NA, 1),
rev(table(data_all$Offspring_Generation)),
rep(NA, 1),
rev(table(data_all$Offspring_Generation)),
rep(NA, 1)
=======
geom_text(x=3, y=1.2, label = paste("k =", colSums(MR_MG_OffSex_lnRRi$X)["Offspring_SexBoth"]), fontface = "italic", size = 3) +
geom_text(x=3, y=2.2, label = paste("k =", colSums(MR_MG_OffSex_lnRRi$X)["Offspring_SexFemale"]), fontface = "italic", size = 3) +
geom_text(x=3, y=3.2, label = paste("k =", colSums(MR_MG_OffSex_lnRRi$X)["Offspring_SexMale"]), fontface = "italic", size = 3) +
geom_text(x=-2, y=3.4, label = "Multigenerational", fontface = "bold", size = 4, color = "#E69F00") +
theme(legend.position = "none", plot.margin = margin(30, 2, 2, 2, unit = "pt"))+
annotate('text', x = 4, y = 3, label="*", fontface="bold", size=6)+
annotate('text', x = 4, y = 2, label="*", fontface="bold", size=6)#+
#labs(y = "Grand-offspring sex", angle = 90)
## MG lnCVR
p4 <- orchard_plot(MR_MG_OffSex_lnCVRi, mod = "Offspring_Sex", xlab = "lnCVR", transfm = "none", alpha = 0.3, angle = 45, cb = FALSE, k = FALSE) +
scale_colour_manual(values = rep("#E69F00", 3)) +
scale_fill_manual(values = rep("#E69F00", 3)) +
labs(title="d. ") +
scale_x_continuous(limits = c(-3, 4), n.breaks = 10) +
scale_y_discrete(labels = c("Both", "Female", "Male")) +
geom_text(x=3, y=1.2, label = paste("k =", colSums(MR_MG_OffSex_lnCVRi$X)["Offspring_SexBoth"]), fontface = "italic", size = 3) +
geom_text(x=3, y=2.2, label = paste("k =", colSums(MR_MG_OffSex_lnCVRi$X)["Offspring_SexFemale"]), fontface = "italic", size = 3) +
geom_text(x=3, y=3.2, label = paste("k =", colSums(MR_MG_OffSex_lnCVRi$X)["Offspring_SexMale"]), fontface = "italic", size = 3) +
geom_text(x=-2, y=3.4, label = "Multigenerational", fontface = "bold", size = 4, color = "#E69F00") +
theme(legend.position = "none", plot.margin = margin(30, 2, 2, 2, unit = "pt")) #+
#labs(y = "Grand-offspring sex", angle = 90)
p1 + p3 + p2 + p4 + plot_layout(ncol = 2)  #assemble plot panels
ggsave("../Plots/Figure4_Rplot_v0.pdf", width = 16, height = 10, units = "cm", dpi = 300, scale = 1.6)
# "#56B4E9" - One-off, "#E69F00" - Multigenerational
## OF lnRR
p1 <- orchard_plot(MR_OF_Trait_lnRRi, mod = "Trait", xlab = "lnRR", transfm = "none", alpha = 0.3, angle = 0, cb = FALSE, k = FALSE) +
scale_colour_manual(values = rep("#56B4E9", 8)) +
scale_fill_manual(values = rep("#56B4E9", 8)) +
labs(title = "a. ") +
scale_x_continuous(limits = c(-3, 4), n.breaks = 10) +
scale_y_discrete(labels = c("Adiposity", "Body weight", "Glucose Fasting", "Glucose Tolerance", "Insulin Fasting", "Insulin Tolerance", "Leptin", "Triglycerides")) +
geom_text(x=3, y=1.2, label = paste("k =", colSums(MR_OF_Trait_lnRRi$X)["TraitAdiposity"]), fontface = "italic", size = 3) +
geom_text(x=3, y=2.2, label = paste("k =", colSums(MR_OF_Trait_lnRRi$X)["TraitBody_Weight"]), fontface = "italic", size = 3) +
geom_text(x=3, y=3.2, label = paste("k =", colSums(MR_OF_Trait_lnRRi$X)["TraitGlucose_FBG"]), fontface = "italic", size = 3) +
geom_text(x=3, y=4.2, label = paste("k =", colSums(MR_OF_Trait_lnRRi$X)["TraitGlucose_TT"]), fontface = "italic", size = 3) +
geom_text(x=3, y=5.2, label = paste("k =", colSums(MR_OF_Trait_lnRRi$X)["TraitInsulin_FI"]), fontface = "italic", size = 3) +
geom_text(x=3, y=6.2, label = paste("k =", colSums(MR_OF_Trait_lnRRi$X)["TraitInsulin_TT"]), fontface = "italic", size = 3) +
geom_text(x=3, y=7.2, label = paste("k =", colSums(MR_OF_Trait_lnRRi$X)["TraitLeptin"]), fontface = "italic", size = 3) +
geom_text(x=3, y=8.2, label = paste("k =", colSums(MR_OF_Trait_lnRRi$X)["TraitTriglycerides"]), fontface = "italic", size = 3) +
geom_text(x=-2, y=8.4, label = "One-off", fontface = "bold", size = 4, color = "#56B4E9") +
theme(legend.position = "none", plot.margin = margin(30, 2, 2, 2, unit = "pt")) +
labs(y = "Grand-offspring trait", angle = 90)+
annotate('text', x = 4, y = 1, label="*", fontface="bold", size=6)
## OF lnCVR
p2 <- orchard_plot(MR_OF_Trait_lnCVRi, mod = "Trait", xlab = "lnCVR", transfm = "none", alpha = 0.3, angle = 0, cb = FALSE, k = FALSE) +
scale_colour_manual(values = rep("#56B4E9", 8)) +
scale_fill_manual(values = rep("#56B4E9", 8)) +
labs(title = "c. ") +
scale_x_continuous(limits = c(-3, 4), n.breaks = 10) +
scale_y_discrete(labels = c("Adiposity", "Body weight", "Glucose Fasting", "Glucose Tolerance", "Insulin Fasting", "Insulin Tolerance", "Leptin", "Triglycerides")) +
geom_text(x=3, y=1.2, label = paste("k =", colSums(MR_OF_Trait_lnCVRi$X)["TraitAdiposity"]), fontface = "italic", size = 3) +
geom_text(x=3, y=2.2, label = paste("k =", colSums(MR_OF_Trait_lnCVRi$X)["TraitBody_Weight"]), fontface = "italic", size = 3) +
geom_text(x=3, y=3.2, label = paste("k =", colSums(MR_OF_Trait_lnCVRi$X)["TraitGlucose_FBG"]), fontface = "italic", size = 3) +
geom_text(x=3, y=4.2, label = paste("k =", colSums(MR_OF_Trait_lnCVRi$X)["TraitGlucose_TT"]), fontface = "italic", size = 3) +
geom_text(x=3, y=5.2, label = paste("k =", colSums(MR_OF_Trait_lnCVRi$X)["TraitInsulin_FI"]), fontface = "italic", size = 3) +
geom_text(x=3, y=6.2, label = paste("k =", colSums(MR_OF_Trait_lnCVRi$X)["TraitInsulin_TT"]), fontface = "italic", size = 3) +
geom_text(x=3, y=7.2, label = paste("k =", colSums(MR_OF_Trait_lnCVRi$X)["TraitLeptin"]), fontface = "italic", size = 3) +
geom_text(x=3, y=8.2, label = paste("k =", colSums(MR_OF_Trait_lnCVRi$X)["TraitTriglycerides"]), fontface = "italic", size = 3) +
geom_text(x=-2, y=8.4, label = "One-off", fontface = "bold", size = 4, color = "#56B4E9") +
theme(legend.position = "none", plot.margin = margin(30, 2, 2, 2, unit = "pt")) +
labs(y = "Grand-offspring trait", angle = 90)
## MG lnRR
p3 <- orchard_plot(MR_MG_Trait_lnRRi, mod = "Trait", xlab = "lnRR", transfm = "none", alpha = 0.3, angle = 0, cb = FALSE, k = FALSE) +
scale_colour_manual(values = rep("#E69F00", 8)) +
scale_fill_manual(values = rep("#E69F00", 8)) +
labs(title = "b. ") +
scale_x_continuous(limits = c(-3, 4), n.breaks = 10) +
scale_y_discrete(labels = c("Adiposity", "Body weight", "Glucose Fasting", "Glucose Tolerance", "Insulin Fasting", "Insulin Tolerance", "Leptin", "Triglycerides")) +
geom_text(x=3, y=1.2, label = paste("k =", colSums(MR_MG_Trait_lnRRi$X)["TraitAdiposity"]), fontface = "italic", size = 3) +
geom_text(x=3, y=2.2, label = paste("k =", colSums(MR_MG_Trait_lnRRi$X)["TraitBody_Weight"]), fontface = "italic", size = 3) +
geom_text(x=3, y=3.2, label = paste("k =", colSums(MR_MG_Trait_lnRRi$X)["TraitGlucose_FBG"]), fontface = "italic", size = 3) +
geom_text(x=3, y=4.2, label = paste("k =", colSums(MR_MG_Trait_lnRRi$X)["TraitGlucose_TT"]), fontface = "italic", size = 3) +
geom_text(x=3, y=5.2, label = paste("k =", colSums(MR_MG_Trait_lnRRi$X)["TraitInsulin_FI"]), fontface = "italic", size = 3) +
geom_text(x=3, y=6.2, label = paste("k =", colSums(MR_MG_Trait_lnRRi$X)["TraitInsulin_TT"]), fontface = "italic", size = 3) +
geom_text(x=3, y=7.2, label = paste("k =", colSums(MR_MG_Trait_lnRRi$X)["TraitLeptin"]), fontface = "italic", size = 3) +
geom_text(x=3, y=8.2, label = paste("k =", colSums(MR_MG_Trait_lnRRi$X)["TraitTriglycerides"]), fontface = "italic", size = 3) +
geom_text(x=-1.8, y=8.4, label = "Multigenerational", fontface = "bold", size = 4, color = "#E69F00") +
theme(legend.position = "none", plot.margin = margin(30, 2, 2, 2, unit = "pt"))+
annotate('text', x = 4, y = 1, label="*", fontface="bold", size=6)+
annotate('text', x = 4, y = 7, label="*", fontface="bold", size=6)+
annotate('text', x = 4, y = 8, label="*", fontface="bold", size=6)+
annotate('text', x = 4, y = 5, label="*", fontface="bold", size=6)#+
#labs(y = "Grand-offspring trait", angle = 90)
## MG lnCVR
p4 <- orchard_plot(MR_MG_Trait_lnCVRi, mod = "Trait", xlab = "lnCVR", transfm = "none", alpha = 0.3, angle = 0, cb = FALSE, k = FALSE) +
scale_colour_manual(values = rep("#E69F00", 8)) +
scale_fill_manual(values = rep("#E69F00", 8)) +
labs(title = "d. ") +
scale_x_continuous(limits = c(-3, 4), n.breaks = 10) +
scale_y_discrete(labels = c("Adiposity", "Body weight", "Glucose Fasting", "Glucose Tolerance", "Insulin Fasting", "Insulin Tolerance", "Leptin", "Triglycerides")) +
geom_text(x=3, y=1.2, label = paste("k =", colSums(MR_MG_Trait_lnCVRi$X)["TraitAdiposity"]), fontface = "italic", size = 3) +
geom_text(x=3, y=2.2, label = paste("k =", colSums(MR_MG_Trait_lnCVRi$X)["TraitBody_Weight"]), fontface = "italic", size = 3) +
geom_text(x=3, y=3.2, label = paste("k =", colSums(MR_MG_Trait_lnCVRi$X)["TraitGlucose_FBG"]), fontface = "italic", size = 3) +
geom_text(x=3, y=4.2, label = paste("k =", colSums(MR_MG_Trait_lnCVRi$X)["TraitGlucose_TT"]), fontface = "italic", size = 3) +
geom_text(x=3, y=5.2, label = paste("k =", colSums(MR_MG_Trait_lnCVRi$X)["TraitInsulin_FI"]), fontface = "italic", size = 3) +
geom_text(x=3, y=6.2, label = paste("k =", colSums(MR_MG_Trait_lnCVRi$X)["TraitInsulin_TT"]), fontface = "italic", size = 3) +
geom_text(x=3, y=7.2, label = paste("k =", colSums(MR_MG_Trait_lnCVRi$X)["TraitLeptin"]), fontface = "italic", size = 3) +
geom_text(x=3, y=8.2, label = paste("k =", colSums(MR_MG_Trait_lnCVRi$X)["TraitTriglycerides"]), fontface = "italic", size = 3) +
geom_text(x=-1.8, y=8.4, label = "Multigenerational", fontface = "bold", size = 4, color = "#E69F00") +
theme(legend.position = "none", plot.margin = margin(30, 2, 2, 2, unit = "pt"))+
annotate('text', x = 4, y = 8, label="*", fontface="bold", size=6)#+
#labs(y = "Grand-offspring trait", angle = 90)
p1 + p3 + p2 + p4 + plot_layout(ncol = 2)  #assemble plot panels
ggsave("../Plots/Figure5_Rplot_v0.pdf", width = 16, height = 14, units = "cm", dpi = 300, scale = 1.6)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE, # no warnings
cache = TRUE,# Cacheing to save time when kniting
tidy = TRUE
#fig.width = 9
>>>>>>> f2aa492c9d77e701107c005d4c9871142a4a7d57
)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
orchaRd #orchard plots, !!! actually using custom function - modified version with new argument k = FALSE !!!
)
# Load custom functions
#source("./Scripts/custom_functions.R") #load custom functions
# plotting 3 plots in a single column with less labels
## F0_Parent_Exposed
# prepare data for plotting
plotting_df <- data_all %>% group_by(F0_Parent_Exposed, Exposure_Type) %>% summarise(Freq = n()) %>% mutate(Freq = if_else(Exposure_Type == "One-off", -Freq, Freq))
temp_df <- plotting_df %>% filter(Exposure_Type == "One-off") %>% arrange(Freq)
the_order <- rev(temp_df$F0_Parent_Exposed)
# plot
p_F0_Parent_Exposed <-
plotting_df %>%
ggplot(aes(x = F0_Parent_Exposed, y = Freq, group = Exposure_Type, fill = Exposure_Type)) +
geom_bar(stat = "identity", width = 0.5) +
coord_flip() +
scale_x_discrete(limits = the_order, position = "top") + #used ordered F0_Parent_Exposeds - use for single axis
scale_y_continuous(breaks = seq(-200, 100, 50), labels = abs(seq(-200, 100, 50)), limits = c(-210, 150)) +
labs(x = "", y = "", title = "Number of effect sizes by exposed grand-parent sex") +
theme(legend.position = "none",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill =  "white"),
panel.grid.major.x = element_line("grey")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00"),   # change the default colors of bars
name="",
breaks=c("One-off", "Multigenerational"),
labels=c("One-off", "Multigenerational"))
#print(p_F0_Parent_Exposed)
## Offspring_Sex
# prepare data for plotting
plotting_df <- data_all %>% group_by(Offspring_Sex, Exposure_Type) %>% summarise(Freq = n()) %>% mutate(Freq = if_else(Exposure_Type == "One-off", -Freq, Freq))
temp_df <- plotting_df %>%  filter(Exposure_Type == "One-off") %>%  arrange(Freq)
the_order <- rev(temp_df$Offspring_Sex)
# plot
p_Offspring_Sex <-
plotting_df %>%
ggplot(aes(x = Offspring_Sex, y = Freq, group = Exposure_Type, fill = Exposure_Type)) +
geom_bar(stat = "identity", width = 0.5) +
coord_flip() +
scale_x_discrete(limits = the_order, position = "top") + #used ordered Offspring_Sexs - use for single axis
scale_y_continuous(breaks = seq(-200, 100, 50), labels = abs(seq(-200, 100, 50)), limits = c(-210, 150)) +
labs(x = "", y = "", title = "Number of effect sizes by grand-offspring sex") +
theme(legend.position = "none",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill =  "white"),
panel.grid.major.x = element_line("grey")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00"),   # change the default colors of bars
name="",
breaks=c("One-off", "Multigenerational"),
labels=c("One-off", "Multigenerational"))
#print(p_Offspring_Sex)
## Trait
# prepare data for plotting
plotting_df <- data_all %>% group_by(Trait, Exposure_Type) %>% summarise(Freq = n()) %>% mutate(Freq = if_else(Exposure_Type == "One-off", -Freq, Freq))
temp_df <- plotting_df %>%  filter(Exposure_Type == "One-off") %>%  arrange(Freq)
the_order <- rev(temp_df$Trait)
# plot
p_Trait <-
plotting_df %>%
ggplot(aes(x = Trait, y = Freq, group = Exposure_Type, fill = Exposure_Type)) +
geom_bar(stat = "identity", width = 0.5) +
coord_flip() +
scale_x_discrete(limits = the_order, position = "top") + #used ordered Traits - use for single axis
scale_y_continuous(breaks = seq(-200, 100, 50), labels = abs(seq(-200, 100, 50)), limits = c(-210, 150)) +
labs(x = "", y = "", title = "Number of effect sizes by grand-offspring trait") +
theme(legend.position = "none",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill =  "white"),
panel.grid.major.x = element_line("grey")) +
scale_fill_manual(values=c("#56B4E9", "#E69F00"),   # change the default colors of bars
name="",
breaks=c("One-off", "Multigenerational"),
labels=c("One-off", "Multigenerational"))
#print(p_Trait)
p_F0_Parent_Exposed / p_Offspring_Sex / p_Trait + plot_layout(ncol=1,heights=c(1,1,3))
ggsave(file = "../Plots/Figure1b_Rplot_v0.pdf", width = 8, height = 7, units = "cm", dpi = 300, scale=1.8)
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle # for AICtab
)
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
MA_0 <- rma.mv(lnRR, VlnRR, data = data_OF, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_OF, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_OF, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
MA_9_Vmat
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat and MA_10_Vmat and MA_4_Vmat best, but MA_5_Vmat and MA_6_Vmat and MA_8_Vmat very similar
MA_0 <- rma.mv(lnRR, VlnRR, data = data_MG, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_MG, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_MG, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')#with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat and MA_10_Vmat and MA_4_Vmat best, but MA_5_Vmat and MA_6_Vmat and MA_8_Vmat very similar
rm(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat)
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle # for AICtab
)
#Load environment
load('myEnvironment.RData')
# Load custom functions
#source("./Scripts/custom_functions.R") #load custom functions
load('myEnvironment.RData')
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle, # for AICtab
here, # help loading and saving
)
#Load environment
load(here('myEnvironment.RData'))
# Load custom functions
#source("./Scripts/custom_functions.R") #load custom functions
## OF dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_OF, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_OF, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_OF, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
## MG dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_MG, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_MG, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_MG, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')#with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat and MA_10_Vmat and MA_4_Vmat best, but MA_5_Vmat and MA_6_Vmat and MA_8_Vmat very similar
#use: random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID) #MA_9_Vmat
View(data_OF)
## OF lnRR - intercepts (both, female, male)
MR_OF_Rodent_lnRRi <- rma.mv(lnRR, Vmat_lnRR_OF, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnRRi)
save(MR_OF_Rodent_lnRRi, file = "./Rdata/MR_OF_Rodent_lnRRi.Rdata")
## OF lnRR - intercepts (both, female, male)
MR_OF_Rodent_lnRRi <- rma.mv(lnRR, Vmat_lnRR_OF, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnRRi)
save(MR_OF_Rodent_lnRRi, file = here("Rdata/MR_OF_Rodent_lnRRi.Rdata"))
## OF lnRR - ref rat
MR_OF_Rodent_lnRRf <- rma.mv(lnRR, Vmat_lnRR_OF, mods= ~relevel(data_OF$Rodent_Type, ref="Rat"), random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnRRf)
save(MR_OF_Rodent_lnRRf, file = here("Rdata/MR_OF_Rodent_lnRRf.Rdata"))
## OF lnRR - ref mouse
MR_OF_Rodent_lnRRm <- rma.mv(lnRR, Vmat_lnRR_OF, mods= ~relevel(data_OF$Rodent_Type, ref="Mouse"), random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnRRm)
save(MR_OF_Rodent_lnRRm, file = here("Rdata/MR_OF_Rodent_lnRRm.Rdata"))
R2(MR_OF_Rodent_lnRRi)
summary(MR_OF_Rodent_lnRRi)
summary(MR_OF_Rodent_lnRRf)
summary(MR_OF_Rodent_lnRRm)
## OF lnCVR - intercepts (both, female, male)
MR_OF_Rodent_lnCVRi <- rma.mv(lnCVR, Vmat_lnCVR_OF, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnCVRi)
save(MR_OF_Rodent_lnCVRi, file = "Rdata/MR_OF_Rodent_lnCVRi.Rdata")
## OF lnCVR - intercepts (both, female, male)
MR_OF_Rodent_lnCVRi <- rma.mv(lnCVR, Vmat_lnCVR_OF, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnCVRi)
save(MR_OF_Rodent_lnCVRi, file = "./Rdata/MR_OF_Rodent_lnCVRi.Rdata")
## OF lnCVR - intercepts (both, female, male)
MR_OF_Rodent_lnCVRi <- rma.mv(lnCVR, Vmat_lnCVR_OF, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnCVRi)
save(MR_OF_Rodent_lnCVRi, file = here("Rdata/MR_OF_Rodent_lnCVRi.Rdata"))
## OF lnCVR - ref female
MR_OF_Rodent_lnCVRf <- rma.mv(lnCVR, Vmat_lnCVR_OF, mods= ~relevel(data_OF$Rodent_Type, ref="Female"), random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
## OF lnCVR - intercepts (both, female, male)
MR_OF_Rodent_lnCVRi <- rma.mv(lnCVR, Vmat_lnCVR_OF, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnCVRi)
save(MR_OF_Rodent_lnCVRi, file = here("Rdata/MR_OF_Rodent_lnCVRi.Rdata"))
## OF lnCVR - ref rat
MR_OF_Rodent_lnCVRf <- rma.mv(lnCVR, Vmat_lnCVR_OF, mods= ~relevel(data_OF$Rodent_Type, ref="Rat"), random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnCVRf)
save(MR_OF_Rodent_lnCVRf, file = here("Rdata/MR_OF_Rodent_lnCVRf.Rdata"))
## OF lnCVR - ref mouse
MR_OF_Rodent_lnCVRm <- rma.mv(lnCVR, Vmat_lnCVR_OF, mods= ~relevel(data_OF$Rodent_Type, ref="Mouse"), random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnCVRm)
save(MR_OF_Rodent_lnCVRm, file = here("Rdata/MR_OF_Rodent_lnCVRm.Rdata"))
R2(MR_OF_Rodent_lnCVRi)
## MG lnRR - intercepts (Rat, Mouse)
MR_MG_Rodent_lnRRi <- rma.mv(lnRR, Vmat_lnRR_MG, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = "REML")
summary(MR_MG_Rodent_lnRRi)
save(MR_MG_Rodent_lnRRi, file = here("Rdata/MR_MG_Rodent_lnRRi.Rdata"))
## MG lnRR - ref Rat
MR_MG_Rodent_lnRRf <- rma.mv(lnRR, Vmat_lnRR_MG, mods= ~relevel(data_MG$Rodent_Type, ref="Rat"), random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = "REML")
summary(MR_MG_Rodent_lnRRf)
save(MR_MG_Rodent_lnRRf, file = here("Rdata/MR_MG_Rodent_lnRRf.Rdata"))
R2(MR_MG_Rodent_lnRRi)
## MG lnCVR - intercepts (Rat, Mouse)
MR_MG_Rodent_lnCVRi <- rma.mv(lnCVR, Vmat_lnCVR_MG, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = "REML")
summary(MR_MG_Rodent_lnCVRi)
save(MR_MG_Rodent_lnCVRi, file = here("Rdata/MR_MG_Rodent_lnCVRi.Rdata"))
## MG lnCVR - ref Rat
MR_MG_Rodent_lnCVRf <- rma.mv(lnCVR, Vmat_lnCVR_MG, mods= ~relevel(data_MG$Rodent_Type, ref="Rat"), random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = "REML")
summary(MR_MG_Rodent_lnCVRf)
save(MR_MG_Rodent_lnCVRf, file = here("Rdata/MR_MG_Rodent_lnCVRf.Rdata"))
R2(MR_MG_Rodent_lnCVRi)
summary(MR_OF_Rodent_lnRRi)
summary(MR_OF_Rodent_lnRRi)
summary(MR_OF_Rodent_lnRRf)
summary(MR_OF_Rodent_lnRRm)
summary(MR_OF_Rodent_lnCVRi)
summary(MR_OF_Rodent_lnCVRf)
summary(MR_MG_Rodent_lnRRi)
summary(MR_MG_Rodent_lnRRf)
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle, # for AICtab
here, # help loading and saving
)
#Load environment
load(here('myEnvironment.RData'))
# Load custom functions
#source("./Scripts/custom_functions.R") #load custom functions
## OF lnRR - intercepts (both, female, male)
MR_OF_Rodent_lnRRi <- rma.mv(lnRR, Vmat_lnRR_OF, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MR_OF_Rodent_lnRRi)
summary(MR_OF_Rodent_lnCVRi)
summary(MR_OF_Rodent_lnCVRf)
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle, # for AICtab
here, # help loading and saving
)
#Load environment
#load(here('myEnvironment.RData'))
# Load custom functions
#source("./Scripts/custom_functions.R") #load custom functions
options(scipen=100)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE, # no warnings
cache = TRUE,# Cacheing to save time when kniting
tidy = TRUE
#fig.width = 9
)
#options(knitr.table.format = "latex")
#fancy table on landscape page, etc: https://www.rdocumentation.org/packages/kableExtra/versions/0.5.2/vignettes/awesome_table_in_pdf.Rmd
# loading packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
kableExtra,
grid,        # graphic layout manipulation
#gridExtra, # may not use this
purrr,
magrittr, # extending piping
pander,   # nice tables
metafor,  # package for meta-analysis
#MCMCglmm,  # Bayeisan mixed model package
ggbeeswarm, # making bee-swarm plots possible
#plotly,     # interactive plots using ggplot2
#MuMIn,  # multi-model inference
#lme4,   # lmm & glmm (models)
#broom.mixed, # getting estimates from lmer + glmer objects
#performance, # getting R2 from lmer + glmer objects
png,         # reading png files
patchwork,    # putting ggplots together - you need to install via devtool
formatR, # provides a function tidy_source() to format R source automatically
#lmerTest   # more functions for lme4
#mi,      # missing data analysis
#betareg   # dependance of the above
metafor,
readxl
)
# Load custom functions
#source("./Scripts/custom_functions.R") #load custom functions
MR_OF_Rodent_lnRRf$b[2]
t19$`Mean`[pos] <- round(c(
MR_OF_Rodent_lnRRi$b,
MR_OF_Rodent_lnCVRi$b,
MR_MG_Rodent_lnRRi$b,
MR_MG_Rodent_lnCVRi$b), 3)
# loading empty table
<<<<<<< HEAD
t18 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 15)
# saving row positions for estimates
pos <- c(1:3)
t18$`Mean`[pos] <- round(c(
prediction_F0$pred,
prediction_OF$pred,
prediction_MG$pred), 3)
t18$SE[pos] <- round(c(
prediction_F0$se,
prediction_OF$se,
prediction_MG$se), 3)
t18$CI.lb[pos] <- round(c(
prediction_F0$ci.lb,
prediction_OF$ci.lb,
prediction_MG$ci.lb), 3)
t18$CI.ub[pos] <- round(c(
prediction_F0$ci.ub,
prediction_OF$ci.ub,
prediction_MG$ci.ub), 3)
t18$PI.lb[pos] <- round(c(
prediction_F0$cr.lb,
prediction_OF$cr.lb,
prediction_MG$cr.lb), 3)
t18$PI.ub[pos] <- round(c(
prediction_F0$cr.ub,
prediction_OF$cr.ub,
prediction_MG$cr.ub), 3)
write.csv(t18, file = "../Tables/Table_S18.csv", row.names = F, na = "")
knitr::include_graphics("../Plots/SI_PRISMA_v2.pdf")
knitr::include_graphics("../Plots/SI_Figure_DecisionTree_abstracts_v0.pdf")
knitr::include_graphics("../Plots/SI_Figure_DecisionTree_fulltexts_v0.pdf")
save.image(file='myEnvironment.RData')
=======
t19 <- read_excel("../Tables/Results_Tables_templates.xlsx", sheet = 13)
t19$`Mean`[pos] <- round(c(
MR_OF_Rodent_lnRRi$b,
MR_OF_Rodent_lnCVRi$b,
MR_MG_Rodent_lnRRi$b,
MR_MG_Rodent_lnCVRi$b), 3)
View(t19)
rm(t19)
>>>>>>> f2aa492c9d77e701107c005d4c9871142a4a7d57
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
<<<<<<< HEAD
bbmle # for AICtab
)
#Load environment
load('myEnvironment.RData')
getwd
getwd()
load('myEnvironment.RData')
# Load preprocessed data with effect sizes
data_all <- read.csv(file ="../Data/data_all_ES.csv")
# Load preprocessed data with effect sizes
data_all <- read.csv(file ="./Data/data_all_ES.csv")
# Load preprocessed data with effect sizes
data_all <- read.csv(file ="../Data/data_all_ES.csv")
# Subset by One off and Multigenerational
data_MG <- filter(data_all, Exposure_Type == "Multigenerational")
data_OF <- filter(data_all, Exposure_Type == "One-off")
dim(data_MG)
dim(data_OF)
data_MG <- droplevels(data_MG) #adjust factor levels
data_OF <- droplevels(data_OF) #a
## all data
Vmat_lnRR_all <- make_VCV_matrix(data = data_all, V = "VlnRR", cluster = "Cohort_ID_Control", obs = "ES_ID")
Vmat_lnCVR_all <- make_VCV_matrix(data = data_all, V = "VlnCVR", cluster = "Cohort_ID_Control", obs = "ES_ID")
## OF data
Vmat_lnRR_OF <- make_VCV_matrix(data = data_OF, V = "VlnRR", cluster = "Cohort_ID_Control", obs = "ES_ID")
Vmat_lnCVR_OF <- make_VCV_matrix(data = data_OF, V = "VlnCVR", cluster = "Cohort_ID_Control", obs = "ES_ID")
## MG data
Vmat_lnRR_MG <- make_VCV_matrix(data = data_MG, V = "VlnRR", cluster = "Cohort_ID_Control", obs = "ES_ID")
Vmat_lnCVR_MG <- make_VCV_matrix(data = data_MG, V = "VlnCVR", cluster = "Cohort_ID_Control", obs = "ES_ID")
#Vmat_lnRR_all #visual check
## OF dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_OF, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_OF, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_OF, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
## MG dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_MG, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_MG, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_MG, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')#with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat and MA_10_Vmat and MA_4_Vmat best, but MA_5_Vmat and MA_6_Vmat and MA_8_Vmat very similar
rm(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat)
#use: random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID) #MA_9_Vmat
ls()
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
MA_9_Vmat
MA_4_Vmat
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
## OF dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_OF, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_OF, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_OF, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_OF, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat best, MA_5_Vmat and MA_8_Vmat very similar
## MG dataset
MA_0 <- rma.mv(lnRR, VlnRR, data = data_MG, method = 'ML')
MA_1 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|ES_ID), data = data_MG, method = 'ML')
anova(MA_0, MA_1) #simple comparison of two  models
MA_2 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|ES_ID), data = data_MG, method = 'ML')
MA_3 <- rma.mv(lnRR, VlnRR, random = list(~1|Paper_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4 <- rma.mv(lnRR, VlnRR, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')
MA_4_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML')#with VCV matrix
MA_5_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain
MA_6_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type
MA_7_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Cohort_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain
MA_8_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Type and Rodent_Strain, without Cohort_ID
MA_9_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Type
MA_10_Vmat <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Type, ~1|Study_ID, ~1|Trait, ~1|ES_ID), data = data_MG, method = 'ML') #with VCV matrix and Rodent_Strain, without Cohort_ID and Rodent_Strain
#compare models using AIC:
AICtab(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat, MA_8_Vmat, MA_9_Vmat, MA_10_Vmat) #MA_9_Vmat and MA_10_Vmat and MA_4_Vmat best, but MA_5_Vmat and MA_6_Vmat and MA_8_Vmat very similar
rm(MA_0, MA_1, MA_2, MA_3, MA_4, MA_4_Vmat, MA_5_Vmat, MA_6_Vmat, MA_7_Vmat)
#use: random = list(~1|Rodent_Strain, ~1|Study_ID, ~1|Trait, ~1|ES_ID) #MA_9_Vmat
names(data_OF)
MA_OF_lnRR <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MA_OF_lnRR)
I2(MA_OF_lnRR, method = "S")
summary(MA_OF_lnCVR)
I2(MA_OF_lnCVR, method = "S")
summary(MA_MG_lnRR)
I2(MA_MG_lnRR, method = "S")
summary(MA_MG_lnCVR)
I2(MA_MG_lnCVR, method = "S")
names(data_all)
## lnRR
MR_all_RodT_lnRR <- rma.mv(lnRR, Vmat_lnRR_all, mods= ~Rodent_Type, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnRR)
save(MR_all_RodT_lnRR, file = "../Rdata/MR_all_RodT_lnRR.Rdata")
## lnRR
MR_all_RodT_lnRR <- rma.mv(lnRR, Vmat_lnRR_all, mods= ~Rodent_Type, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnRR)
save(MR_all_RodT_lnRR, file = "./Rdata/MR_all_RodT_lnRR.Rdata")
=======
bbmle, # for AICtab
here, # help loading and saving
)
>>>>>>> f2aa492c9d77e701107c005d4c9871142a4a7d57
knitr::opts_chunk$set(echo = FALSE)
options(scipen=100)
# Load packages
# devtools::install_github("thomasp85/patchwork")
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle, # for AICtab
here, # help loading and saving
)
#Load environment
<<<<<<< HEAD
load('myEnvironment.RData')
pacman::p_load(tidyverse, # tidy family and related pacakges below
metafor, # calculating effect sizes
magrittr, # extending piping
ggplot2,  # nice plots
patchwork,  # arranging plots
bbmle, # for AICtab
here, # help loading and saving
)
load(here('myEnvironment.RData'))
# Load preprocessed data with effect sizes
data_all <- read.csv(file =here("Data", "data_all_ES.csv"))
## OF data - lnRR random-effect model with VCV
MA_OF_lnRR <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MA_OF_lnRR)
I2(MA_OF_lnRR, method = "S")
save(MA_OF_lnRR, file = here("Rdata/MA_OF_lnRR.Rdata"))
## OF data - lnRR random-effect model with VCV
MA_OF_lnRR <- rma.mv(lnRR, Vmat_lnRR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MA_OF_lnRR)
I2(MA_OF_lnRR, method = "S")
save(MA_OF_lnRR, file = here("Rdata/MA_OF_lnRR.Rdata"))
## OF data - lnCVR random-effect model with VCV
MA_OF_lnCVR <- rma.mv(lnCVR, Vmat_lnCVR_OF, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_OF, method = "REML")
summary(MA_OF_lnCVR)
I2(MA_OF_lnCVR, method = "S")
save(MA_OF_lnCVR, file = here("Rdata/MA_OF_lnCVR.Rdata"))
## MG data - lnRR random-effect model with VCV
MA_MG_lnRR <- rma.mv(lnRR, Vmat_lnRR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = "REML")
summary(MA_MG_lnRR)
I2(MA_MG_lnRR, method = "S")
save(MA_MG_lnRR, file = here("Rdata/MA_MG_lnRR.Rdata"))
## MG data - lnCvR random-effect model with VCV
MA_MG_lnCVR <- rma.mv(lnCVR, Vmat_lnCVR_MG, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_MG, method = "REML")
summary(MA_MG_lnCVR)
I2(MA_MG_lnCVR, method = "S")
save(MA_MG_lnCVR, file = here("Rdata/MA_MG_lnCVR.Rdata"))
## lnRR
MR_all_RodT_lnRR <- rma.mv(lnRR, Vmat_lnRR_all, mods= ~Rodent_Type, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnRR)
save(MR_all_RodT_lnRR, file = "./Rdata/MR_all_RodT_lnRR.Rdata")
## lnRR - intercepts
MR_all_RodT_lnRRi <- rma.mv(lnRR, Vmat_lnRR_all, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnRRi)
save(MR_all_RodT_lnRRi, file = "./Rdata/MR_all_RodT_lnRRi.Rdata")
R2(MR_all_ExpT_lnRR)
## lnCVR
MR_all_RodT_lnCVR <- rma.mv(lnCVR, Vmat_lnCVR_all, mods= ~Rodent_Type, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnCVR)
save(MR_all_RodT_lnCVR, file = "./Rdata/MR_all_RodT_lnCVR.Rdata")
## lnCVR - intercepts
MR_all_RodT_lnCVRi <- rma.mv(lnCVR, Vmat_lnCVR_all, mods= ~Rodent_Type - 1, random = list(~1|Rodent_Strain, ~1|Study_ID,  ~1|Trait, ~1|ES_ID), data = data_all, method = "REML")
summary(MR_all_RodT_lnCVRi)
save(MR_all_RodT_lnCVRi, file = "./Rdata/MR_all_RodT_lnCVRi.Rdata")
R2(MR_all_RodT_lnCVR)
#funnel(MR_all_ExpT_lnRR, yaxis="seinv")
#funnel(MR_all_ExpT_lnCVR, yaxis="seinv")
#data_all %>% group_by(Exposure_Type) %>% count()
=======
#load(here('myEnvironment.RData'))
# Load custom functions
#source("./Scripts/custom_functions.R") #load custom functions
summary(MR_OF_Rodent_lnRRi)
summary(MR_OF_Rodent_lnRRf)
summary(MR_OF_Rodent_lnCVRi)
summary(MR_MG_Rodent_lnRRi)
summary(MR_MG_Rodent_lnRRf)
summary(MR_MG_Rodent_lnCVRf)
summary(MR_MG_Rodent_lnCVRi)
summary(MR_MG_Rodent_lnRRf)
>>>>>>> f2aa492c9d77e701107c005d4c9871142a4a7d57
